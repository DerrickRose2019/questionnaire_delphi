package com.djngroup.questionaire.Controller;
import com.djngroup.questionaire.entity.User;
import com.djngroup.questionaire.UserRepository;


import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import org.springframework.beans.factory.annotation.Autowired;

import javax.annotation.Resource;
import javax.sound.midi.Soundbank;
import java.sql.SQLOutput;
import java.util.*;

@Controller

public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Resource
    private UserRepository userRepository;




//    @RequestMapping("/charts")
//    @ResponseBody
//    public List<User> getUser(Model model){
//        Iterable users = userRepository.findAll();
//        List all =
//    }

//    @RequestMapping("/mydata")
//    @ResponseBody
//    public Optional<User> getUser(Integer id){
//        return userRepository.findById(id);
//    }




    @GetMapping("/greeting")
    public String greetingForm(Model model) {
        model.addAttribute("user", new User());
        return "greeting";
    }

    @PostMapping("/greeting")
    public String greetingSubmit(@ModelAttribute User user) {

        User newUser = new User();
        newUser.setLun(user.getLun());
        newUser.setXuehao(user.getXuehao());
        newUser.setXiaofei_min(user.getXiaofei_min());
        newUser.setXiaofei_zuishi(user.getXiaofei_zuishi());
        newUser.setXiaofei_zuigao(user.getXiaofei_zuigao());
        newUser.setXfzb_sp(user.getXfzb_sp());
        newUser.setXfzb_ry(user.getXfzb_ry());
        newUser.setXfzb_fs(user.getXfzb_fs());
        newUser.setXfzb_tx(user.getXfzb_tx());
        newUser.setXfzb_jw(user.getXfzb_jw());
        newUser.setXfzb_zw(user.getXfzb_zw());
        newUser.setXfzb_yx(user.getXfzb_yx());
        userRepository.save(user);

        return "result";

    }

    @GetMapping("/all")
    public String getMessage(Model model) {

        Iterable<User> users = userRepository.findAll();

        model.addAttribute("users", users);
        return "all";
    }

    @RequestMapping("/test")
    public List<User> getUsers(Model model) {
        List<User> list = new ArrayList<User>();
        for(int i=1;i<=userRepository.count();i++){
//            System.out.println(i);
            Optional<User> op = userRepository.findById(i);
            list.add(op.get());
//            System.out.println(op.get().getXuehao());
        }
        return list;
    }

}
